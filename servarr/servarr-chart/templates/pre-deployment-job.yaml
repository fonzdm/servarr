apiVersion: batch/v1
kind: Job
metadata:
  name: pre-install-job
  labels:
    release: "{{ .Release.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "-3"
spec:
  backoffLimit: 1
  template:
    metadata:
      name: "{{.Release.Name}}-config-prepare"
      labels:
        app: "{{ .Release.Name }}"
    spec:
      restartPolicy: Never
      containers:
        - name: qbt-config-injector
          image: dinutac/jinja2docker:2.1.8
          imagePullPolicy: IfNotPresent
          env:
            - name: TORRENT_USERNAME
              value: {{ .Values.torrent.username }}
            - name: TORRENT_PASSWORD
              value: {{ .Values.torrent.password }}
          command:
            - "/bin/sh"
            - "-ec"
          args:
            - "python3 -u /tmp/init-qbittorrent.py 2>&1;"
          volumeMounts:
            - name: torrent-config-volume
              mountPath: /mnt
            - name: init-script
              mountPath: /tmp/init-qbittorrent.py
              subPath: init-qbittorrent.py 
      volumes:
      - name: torrent-config-volume
        persistentVolumeClaim:
          claimName: {{ .Values.volumes.torrentConfig.name }}
      - name: init-script
        configMap:
          name: init-qbittorrent-python-script
          defaultMode: 0644
          # items:
          # - key: qBittorrent.conf
          #   path: qBittorrent.conf
